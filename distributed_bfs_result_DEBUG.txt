Rank: 0, Setting depth to 10

=======================================
Graph with 16 nodes
Index: 2 5 8 11 14 17 20 22 23 24 25 26 27 28 29 30 
Edges: 1 2 0 3 4 0 5 6 1 7 8 1 9 10 2 11 12 2 13 14 3 15 3 4 4 5 5 6 6 7 
=======================================

Rank: 0, Notifying Children
Rank: 0, Notifying 1
Rank: 0, Sending size: 1 to 1
Rank: 0, ACK:1
Rank: 0, ACK length: 6
Rank: 0, ACK recieved from 1
Rank: 0, Notifying 2
Rank: 0, Sending size: 1 to 2
Rank: 0, ACK:1
Rank: 0, ACK length: 6
Rank: 1, Sending ACK: 'ACK:1' to 0
Rank: 1, Parent: 0, depth: 1, visited: 0,1
Rank: 1, Notifying 3
Rank: 1, Sending size: 2 to 3
Rank: 1, ACK:2
Rank: 1, ACK length: 6
Rank: 2, Sending ACK: 'ACK:1' to 0
Rank: 0, ACK recieved from 2
Rank: 0, recieveFromChildren
Rank: 0, Receiving from: 1
Rank: 3, Sending ACK: 'ACK:2' to 1
Rank: 2, Parent: 0, depth: 1, visited: 0,2
Rank: 2, Notifying 5
Rank: 2, Sending size: 2 to 5
Rank: 2, ACK:2
Rank: 2, ACK length: 6
Rank: 1, ACK recieved from 3
Rank: 1, Notifying 4
Rank: 1, Sending size: 2 to 4
Rank: 1, ACK:2
Rank: 1, ACK length: 6
Rank: 3, Parent: 1, depth: 2, visited: 0,1,3
Rank: 3, Notifying 7
Rank: 3, Sending size: 3 to 7
Rank: 3, ACK:3
Rank: 3, ACK length: 6
Rank: 4, Sending ACK: 'ACK:2' to 1
Rank: 5, Sending ACK: 'ACK:2' to 2
Rank: 2, ACK recieved from 5
Rank: 2, Notifying 6
Rank: 2, Sending size: 2 to 6
Rank: 2, ACK:2
Rank: 2, ACK length: 6
Rank: 5, Parent: 2, depth: 2, visited: 0,2,5
Rank: 5, Notifying 11
Rank: 5, Sending size: 3 to 11
Rank: 5, ACK:3
Rank: 5, ACK length: 6
Rank: 1, ACK recieved from 4
Rank: 1, recieveFromChildren
Rank: 1, Receiving from: 3
Rank: 11, Sending ACK: 'ACK:3' to 5
Rank: 7, Sending ACK: 'ACK:3' to 3
Rank: 4, Parent: 1, depth: 2, visited: 0,1,4
Rank: 4, Notifying 9
Rank: 4, Sending size: 3 to 9
Rank: 4, ACK:3
Rank: 4, ACK length: 6
Rank: 6, Sending ACK: 'ACK:2' to 2
Rank: 2, ACK recieved from 6
Rank: 2, recieveFromChildren
Rank: 2, Receiving from: 5
Rank: 6, Parent: 2, depth: 2, visited: 0,2,6
Rank: 6, Notifying 13
Rank: 6, Sending size: 3 to 13
Rank: 6, ACK:3
Rank: 6, ACK length: 6
Rank: 9, Sending ACK: 'ACK:3' to 4
Rank: 13, Sending ACK: 'ACK:3' to 6
Rank: 4, ACK recieved from 9
Rank: 4, Notifying 10
Rank: 4, Sending size: 3 to 10
Rank: 4, ACK:3
Rank: 4, ACK length: 6
Rank: 9, Parent: 4, depth: 3, visited: 0,1,4,9
Rank: 9, recieveFromChildren
Rank: 9, Received from all children - childrenCount: 0
Rank: 9, Received from all children - after print
freeing visited
assigning node
Printing
Rank: 9, Sending Node: depth: 3, childrenCount: 0, parent: 4, node object rank: 9
Rank: 9, notifyParent: json = {
	"rank":	9,
	"depth":	3,
	"parent":	4,
	"childrenCount":	0
}
Printed
Rank: 9, Sending size: 62 to 4
Rank: 9, ACK:62
Rank: 9, ACK length: 7
Rank: 3, ACK recieved from 7
Rank: 5, ACK recieved from 11
Rank: 5, Notifying 12
Rank: 5, Sending size: 3 to 12
Rank: 5, ACK:3
Rank: 5, ACK length: 6
Rank: 5, ACK recieved from 12
Rank: 5, recieveFromChildren
Rank: 5, Receiving from: 11
Rank: 5, Sending ACK: 'ACK:63' to 12
Rank: 5, Received from: 12, Recieved json: {
	"rank":	12,
	"depth":	3,
	"parent":	5,
	"childrenCount":	0
}
Rank: 5, Receiving from: 12
Rank: 12, Sending ACK: 'ACK:3' to 5
Rank: 12, Parent: 5, depth: 3, visited: 0,2,5,12
Rank: 12, recieveFromChildren
Rank: 12, Received from all children - childrenCount: 0
Rank: 12, Received from all children - after print
freeing visited
assigning node
Printing
Rank: 12, Sending Node: depth: 3, childrenCount: 0, parent: 5, node object rank: 12
Rank: 12, notifyParent: json = {
	"rank":	12,
	"depth":	3,
	"parent":	5,
	"childrenCount":	0
}
Printed
Rank: 12, Sending size: 63 to 5
Rank: 12, ACK:63
Rank: 12, ACK length: 7
Rank: 12, ACK recieved from 5
Rank: 3, Notifying 8
Rank: 3, Sending size: 3 to 8
Rank: 3, ACK:3
Rank: 3, ACK length: 6
Rank: 7, Parent: 3, depth: 3, visited: 0,1,3,7
Rank: 7, Notifying 15
Rank: 7, Sending size: 4 to 15
Rank: 7, ACK:4
Rank: 7, ACK length: 6
Rank: 7, ACK recieved from 15
Rank: 7, recieveFromChildren
Rank: 7, Receiving from: 15
Rank: 7, Sending ACK: 'ACK:63' to 15
Rank: 7, Received from: 15, Recieved json: {
	"rank":	15,
	"depth":	4,
	"parent":	7,
	"childrenCount":	0
}
Rank: 7, Received from all children - childrenCount: 1
	 0. Child: 15
Rank: 7, Received from all children - after print
freeing visited
assigning node
Printing
Rank: 7, Sending Node: depth: 3, childrenCount: 1, parent: 3, node object rank: 7
	 0. Child: 15
Rank: 15, Sending ACK: 'ACK:4' to 7
Rank: 15, Parent: 7, depth: 4, visited: 0,1,3,7,15
Rank: 15, recieveFromChildren
Rank: 15, Received from all children - childrenCount: 0
Rank: 15, Received from all children - after print
freeing visited
assigning node
Printing
Rank: 15, Sending Node: depth: 4, childrenCount: 0, parent: 7, node object rank: 15
Rank: 15, notifyParent: json = {
	"rank":	15,
	"depth":	4,
	"parent":	7,
	"childrenCount":	0
}
Printed
Rank: 15, Sending size: 63 to 7
Rank: 15, ACK:63
Rank: 15, ACK length: 7
Rank: 15, ACK recieved from 7
Rank: 7, notifyParent: json = {
	"rank":	7,
	"depth":	3,
	"parent":	3,
	"childrenCount":	1,
	"children":	[{
			"rank":	15,
			"depth":	4,
			"parent":	7,
			"childrenCount":	0
		}]
}
Printed
Rank: 7, Sending size: 152 to 3
Rank: 7, ACK:152
Rank: 7, ACK length: 8
Rank: 8, Sending ACK: 'ACK:3' to 3
Rank: 10, Sending ACK: 'ACK:3' to 4
Rank: 6, ACK recieved from 13
Rank: 6, Notifying 14
Rank: 6, Sending size: 3 to 14
Rank: 6, ACK:3
Rank: 6, ACK length: 6
Rank: 11, Parent: 5, depth: 3, visited: 0,2,5,11
Rank: 11, recieveFromChildren
Rank: 11, Received from all children - childrenCount: 0
Rank: 11, Received from all children - after print
freeing visited
assigning node
Printing
Rank: 11, Sending Node: depth: 3, childrenCount: 0, parent: 5, node object rank: 11
Rank: 11, notifyParent: json = {
	"rank":	11,
	"depth":	3,
	"parent":	5,
	"childrenCount":	0
}
Printed
Rank: 11, Sending size: 63 to 5
Rank: 11, ACK:63
Rank: 11, ACK length: 7
Rank: 4, ACK recieved from 10
Rank: 4, recieveFromChildren
Rank: 4, Receiving from: 9
Rank: 4, Sending ACK: 'ACK:62' to 9
Rank: 3, ACK recieved from 8
Rank: 3, recieveFromChildren
Rank: 3, Receiving from: 7
Rank: 3, Sending ACK: 'ACK:152' to 7
Rank: 9, ACK recieved from 4
Rank: 5, Sending ACK: 'ACK:63' to 11
Rank: 13, Parent: 6, depth: 3, visited: 0,2,6,13
Rank: 13, recieveFromChildren
Rank: 13, Received from all children - childrenCount: 0
Rank: 13, Received from all children - after print
freeing visited
assigning node
Printing
Rank: 13, Sending Node: depth: 3, childrenCount: 0, parent: 6, node object rank: 13
Rank: 13, notifyParent: json = {
	"rank":	13,
	"depth":	3,
	"parent":	6,
	"childrenCount":	0
}
Printed
Rank: 13, Sending size: 63 to 6
Rank: 13, ACK:63
Rank: 13, ACK length: 7
Rank: 10, Parent: 4, depth: 3, visited: 0,1,4,10
Rank: 4, Received from: 9, Recieved json: {
	"rank":	9,
	"depth":	3,
	"parent":	4,
	"childrenCount":	0
}
Rank: 4, Receiving from: 10
Rank: 14, Sending ACK: 'ACK:3' to 6
Rank: 10, recieveFromChildren
Rank: 10, Received from all children - childrenCount: 0
Rank: 10, Received from all children - after print
freeing visited
assigning node
Printing
Rank: 10, Sending Node: depth: 3, childrenCount: 0, parent: 4, node object rank: 10
Rank: 10, notifyParent: json = {
	"rank":	10,
	"depth":	3,
	"parent":	4,
	"childrenCount":	0
}
Printed
Rank: 10, Sending size: 63 to 4
Rank: 10, ACK:63
Rank: 4, Sending ACK: 'ACK:63' to 10
Rank: 10, ACK length: 7
Rank: 10, ACK recieved from 4
Rank: 1, Sending ACK: 'ACK:226' to 4
Rank: 1, Received from: 4, Recieved json: {
	"rank":	4,
	"depth":	2,
	"parent":	1,
	"childrenCount":	2,
	"children":	[{
			"rank":	9,
			"depth":	3,
			"parent":	4,
			"childrenCount":	0
		}, {
			"rank":	10,
			"depth":	3,
			"parent":	4,
			"childrenCount":	0
		}]
}
Rank: 1, Receiving from: 4
Rank: 4, Received from: 10, Recieved json: {
	"rank":	10,
	"depth":	3,
	"parent":	4,
	"childrenCount":	0
}
Rank: 4, Received from all children - childrenCount: 2
	 0. Child: 9
	 1. Child: 10
Rank: 4, Received from all children - after print
freeing visited
assigning node
Printing
Rank: 4, Sending Node: depth: 2, childrenCount: 2, parent: 1, node object rank: 4
	 0. Child: 9
	 1. Child: 10
Rank: 4, notifyParent: json = {
	"rank":	4,
	"depth":	2,
	"parent":	1,
	"childrenCount":	2,
	"children":	[{
			"rank":	9,
			"depth":	3,
			"parent":	4,
			"childrenCount":	0
		}, {
			"rank":	10,
			"depth":	3,
			"parent":	4,
			"childrenCount":	0
		}]
}
Printed
Rank: 4, Sending size: 226 to 1
Rank: 4, ACK:226
Rank: 4, ACK length: 8
Rank: 4, ACK recieved from 1
Rank: 7, ACK recieved from 3
Rank: 11, ACK recieved from 5
Rank: 8, Parent: 3, depth: 3, visited: 0,1,3,8
Rank: 8, recieveFromChildren
Rank: 8, Received from all children - childrenCount: 0
Rank: 8, Received from all children - after print
freeing visited
assigning node
Printing
Rank: 8, Sending Node: depth: 3, childrenCount: 0, parent: 3, node object rank: 8
Rank: 8, notifyParent: json = {
	"rank":	8,
	"depth":	3,
	"parent":	3,
	"childrenCount":	0
}
Printed
Rank: 8, Sending size: 62 to 3
Rank: 8, ACK:62
Rank: 8, ACK length: 7
Rank: 3, Received from: 7, Recieved json: {
	"rank":	7,
	"depth":	3,
	"parent":	3,
	"childrenCount":	1,
	"children":	[{
			"rank":	15,
			"depth":	4,
			"parent":	7,
			"childrenCount":	0
		}]
}
Rank: 3, Receiving from: 8
Rank: 3, Sending ACK: 'ACK:62' to 8
Rank: 6, ACK recieved from 14
Rank: 6, recieveFromChildren
Rank: 6, Receiving from: 13
Rank: 6, Sending ACK: 'ACK:63' to 13
Rank: 13, ACK recieved from 6
Rank: 5, Received from: 11, Recieved json: {
	"rank":	11,
	"depth":	3,
	"parent":	5,
	"childrenCount":	0
}
Rank: 5, Received from all children - childrenCount: 2
	 0. Child: 12
	 1. Child: 11
Rank: 5, Received from all children - after print
freeing visited
assigning node
Printing
Rank: 5, Sending Node: depth: 2, childrenCount: 2, parent: 2, node object rank: 5
	 0. Child: 12
	 1. Child: 11
Rank: 5, notifyParent: json = {
	"rank":	5,
	"depth":	2,
	"parent":	2,
	"childrenCount":	2,
	"children":	[{
			"rank":	12,
			"depth":	3,
			"parent":	5,
			"childrenCount":	0
		}, {
			"rank":	11,
			"depth":	3,
			"parent":	5,
			"childrenCount":	0
		}]
}
Printed
Rank: 5, Sending size: 227 to 2
Rank: 5, ACK:227
Rank: 5, ACK length: 8
Rank: 14, Parent: 6, depth: 3, visited: 0,2,6,14
Rank: 14, recieveFromChildren
Rank: 14, Received from all children - childrenCount: 0
Rank: 14, Received from all children - after print
freeing visited
assigning node
Printing
Rank: 14, Sending Node: depth: 3, childrenCount: 0, parent: 6, node object rank: 14
Rank: 14, notifyParent: json = {
	"rank":	14,
	"depth":	3,
	"parent":	6,
	"childrenCount":	0
}
Printed
Rank: 14, Sending size: 63 to 6
Rank: 14, ACK:63
Rank: 14, ACK length: 7
Rank: 8, ACK recieved from 3
Rank: 3, Received from: 8, Recieved json: {
	"rank":	8,
	"depth":	3,
	"parent":	3,
	"childrenCount":	0
}
Rank: 3, Received from all children - childrenCount: 2
	 0. Child: 7
	 1. Child: 8
Rank: 3, Received from all children - after print
freeing visited
assigning node
Printing
Rank: 3, Sending Node: depth: 2, childrenCount: 2, parent: 1, node object rank: 3
	 0. Child: 7
	 1. Child: 8
Rank: 3, notifyParent: json = {
	"rank":	3,
	"depth":	2,
	"parent":	1,
	"childrenCount":	2,
	"children":	[{
			"rank":	7,
			"depth":	3,
			"parent":	3,
			"childrenCount":	1,
			"children":	[{
					"rank":	15,
					"depth":	4,
					"parent":	7,
					"childrenCount":	0
				}]
		}, {
			"rank":	8,
			"depth":	3,
			"parent":	3,
			"childrenCount":	0
		}]
}
Printed
Rank: 3, Sending size: 327 to 1
Rank: 3, ACK:327
Rank: 3, ACK length: 8
Rank: 6, Received from: 13, Recieved json: {
	"rank":	13,
	"depth":	3,
	"parent":	6,
	"childrenCount":	0
}
Rank: 6, Receiving from: 14
Rank: 6, Sending ACK: 'ACK:63' to 14
Rank: 2, Sending ACK: 'ACK:227' to 5
Rank: 14, ACK recieved from 6
Rank: 6, Received from: 14, Recieved json: {
	"rank":	14,
	"depth":	3,
	"parent":	6,
	"childrenCount":	0
}
Rank: 6, Received from all children - childrenCount: 2
	 0. Child: 13
	 1. Child: 14
Rank: 6, Received from all children - after print
freeing visited
assigning node
Printing
Rank: 6, Sending Node: depth: 2, childrenCount: 2, parent: 2, node object rank: 6
	 0. Child: 13
	 1. Child: 14
Rank: 6, notifyParent: json = {
	"rank":	6,
	"depth":	2,
	"parent":	2,
	"childrenCount":	2,
	"children":	[{
			"rank":	13,
			"depth":	3,
			"parent":	6,
			"childrenCount":	0
		}, {
			"rank":	14,
			"depth":	3,
			"parent":	6,
			"childrenCount":	0
		}]
}
Printed
Rank: 6, Sending size: 227 to 2
Rank: 6, ACK:227
Rank: 6, ACK length: 8
Rank: 1, Sending ACK: 'ACK:327' to 3
Rank: 3, ACK recieved from 1
Rank: 5, ACK recieved from 2
Rank: 1, Received from: 3, Recieved json: {
	"rank":	3,
	"depth":	2,
	"parent":	1,
	"childrenCount":	2,
	"children":	[{
			"rank":	7,
			"depth":	3,
			"parent":	3,
			"childrenCount":	1,
			"children":	[{
					"rank":	15,
					"depth":	4,
					"parent":	7,
					"childrenCount":	0
				}]
		}, {
			"rank":	8,
			"depth":	3,
			"parent":	3,
			"childrenCount":	0
		}]
}
Rank: 1, Received from all children - childrenCount: 2
	 0. Child: 4
	 1. Child: 3
Rank: 1, Received from all children - after print
freeing visited
assigning node
Printing
Rank: 1, Sending Node: depth: 1, childrenCount: 2, parent: 0, node object rank: 1
	 0. Child: 4
	 1. Child: 3
Rank: 1, notifyParent: json = {
	"rank":	1,
	"depth":	1,
	"parent":	0,
	"childrenCount":	2,
	"children":	[{
			"rank":	4,
			"depth":	2,
			"parent":	1,
			"childrenCount":	2,
			"children":	[{
					"rank":	9,
					"depth":	3,
					"parent":	4,
					"childrenCount":	0
				}, {
					"rank":	10,
					"depth":	3,
					"parent":	4,
					"childrenCount":	0
				}]
		}, {
			"rank":	3,
			"depth":	2,
			"parent":	1,
			"childrenCount":	2,
			"children":	[{
					"rank":	7,
					"depth":	3,
					"parent":	3,
					"childrenCount":	1,
					"children":	[{
							"rank":	15,
							"depth":	4,
							"parent":	7,
							"childrenCount":	0
						}]
				}, {
					"rank":	8,
					"depth":	3,
					"parent":	3,
					"childrenCount":	0
				}]
		}]
}
Printed
Rank: 1, Sending size: 710 to 0
Rank: 1, ACK:710
Rank: 1, ACK length: 8
Rank: 0, Sending ACK: 'ACK:710' to 1
Rank: 0, Received from: 1, Recieved json: {
	"rank":	1,
	"depth":	1,
	"parent":	0,
	"childrenCount":	2,
	"children":	[{
			"rank":	4,
			"depth":	2,
			"parent":	1,
			"childrenCount":	2,
			"children":	[{
					"rank":	9,
					"depth":	3,
					"parent":	4,
					"childrenCount":	0
				}, {
					"rank":	10,
					"depth":	3,
					"parent":	4,
					"childrenCount":	0
				}]
		}, {
			"rank":	3,
			"depth":	2,
			"parent":	1,
			"childrenCount":	2,
			"children":	[{
					"rank":	7,
					"depth":	3,
					"parent":	3,
					"childrenCount":	1,
					"children":	[{
							"rank":	15,
							"depth":	4,
							"parent":	7,
							"childrenCount":	0
						}]
				}, {
					"rank":	8,
					"depth":	3,
					"parent":	3,
					"childrenCount":	0
				}]
		}]
}
Rank: 0, Receiving from: 2
Rank: 1, ACK recieved from 0
Rank: 2, Received from: 5, Recieved json: {
	"rank":	5,
	"depth":	2,
	"parent":	2,
	"childrenCount":	2,
	"children":	[{
			"rank":	12,
			"depth":	3,
			"parent":	5,
			"childrenCount":	0
		}, {
			"rank":	11,
			"depth":	3,
			"parent":	5,
			"childrenCount":	0
		}]
}
Rank: 2, Receiving from: 6
Rank: 2, Sending ACK: 'ACK:227' to 6
Rank: 2, Received from: 6, Recieved json: {
	"rank":	6,
	"depth":	2,
	"parent":	2,
	"childrenCount":	2,
	"children":	[{
			"rank":	13,
			"depth":	3,
			"parent":	6,
			"childrenCount":	0
		}, {
			"rank":	14,
			"depth":	3,
			"parent":	6,
			"childrenCount":	0
		}]
}
Rank: 2, Received from all children - childrenCount: 2
	 0. Child: 5
	 1. Child: 6
Rank: 2, Received from all children - after print
freeing visited
assigning node
Printing
Rank: 2, Sending Node: depth: 1, childrenCount: 2, parent: 0, node object rank: 2
	 0. Child: 5
	 1. Child: 6
Rank: 2, notifyParent: json = {
	"rank":	2,
	"depth":	1,
	"parent":	0,
	"childrenCount":	2,
	"children":	[{
			"rank":	5,
			"depth":	2,
			"parent":	2,
			"childrenCount":	2,
			"children":	[{
					"rank":	12,
					"depth":	3,
					"parent":	5,
					"childrenCount":	0
				}, {
					"rank":	11,
					"depth":	3,
					"parent":	5,
					"childrenCount":	0
				}]
		}, {
			"rank":	6,
			"depth":	2,
			"parent":	2,
			"childrenCount":	2,
			"children":	[{
					"rank":	13,
					"depth":	3,
					"parent":	6,
					"childrenCount":	0
				}, {
					"rank":	14,
					"depth":	3,
					"parent":	6,
					"childrenCount":	0
				}]
		}]
}
Printed
Rank: 2, Sending size: 599 to 0
Rank: 2, ACK:599
Rank: 6, ACK recieved from 2
Rank: 2, ACK length: 8
Rank: 0, Sending ACK: 'ACK:599' to 2
Rank: 2, ACK recieved from 0
Rank: 0, Received from: 2, Recieved json: {
	"rank":	2,
	"depth":	1,
	"parent":	0,
	"childrenCount":	2,
	"children":	[{
			"rank":	5,
			"depth":	2,
			"parent":	2,
			"childrenCount":	2,
			"children":	[{
					"rank":	12,
					"depth":	3,
					"parent":	5,
					"childrenCount":	0
				}, {
					"rank":	11,
					"depth":	3,
					"parent":	5,
					"childrenCount":	0
				}]
		}, {
			"rank":	6,
			"depth":	2,
			"parent":	2,
			"childrenCount":	2,
			"children":	[{
					"rank":	13,
					"depth":	3,
					"parent":	6,
					"childrenCount":	0
				}, {
					"rank":	14,
					"depth":	3,
					"parent":	6,
					"childrenCount":	0
				}]
		}]
}
Rank: 0, Received from all children - childrenCount: 2
	 0. Child: 1
	 1. Child: 2
Rank: 0, Received from all children - after print
Rank: 0, Got Node: depth: 0, childrenCount: 2, parent: 0, 0
======================= Output Start ======================
===================== Distributed BFS =====================
Number of processes: 16
Max Depth: 10
Time taken: 0.165714
Total Messages sent: 105
Full Graph:
Root Node: 0, Depth: 0, Parent: 0, Children: 2
0
|── 1
    |── 4
        |── 9
        └── 10
    └── 3
        |── 7
            └── 15
        └── 8
└── 2
    |── 5
        |── 12
        └── 11
    └── 6
        |── 13
        └── 14
======================= Output End ========================

